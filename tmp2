/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: juhallyn <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2017/07/17 15:57:51 by juhallyn          #+#    #+#             */
/*   Updated: 2017/07/21 15:49:13 by juhallyn         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "./get_next_line.h"
#include <stdio.h>

static int		init_line(char **str, char *line, char **chptr, int ret)
{
	if (!*chptr && ret == 0)
		return (0);
	if (!*chptr)
	{
		line = ft_strdup(*str);
		ft_strdel(str);
	}
	else
	{
		line = ft_strsub(*str, 0, *chptr - *str);
		*str = ft_strdup(*chptr + 1);
	}
	return (1);
}

int				get_next_line(const int fd, char **line)
{
	static char *str = NULL;
	int			ret;
	char		buff[BUFF_SIZE + 1];
	char 		*chptr;
	char		*memory;

	chptr = NULL;
	memory = NULL;
	while ((ret = read(fd, buff, BUFF_SIZE)))
	{
		buff[ret]= '\0';
		memory = str;
		str = ft_strjoin(str, buff);
		ft_strdel(&memory);
		chptr = ft_strchr(str, '\n');
		if (!chptr)
			*line = ft_strdup(str);
	}
	if (ret == -1)
		return (-1);
	if (!chptr && str)
	{
		*line = ft_strdup(str);
		ft_strdel(&str);
		return (1);
	}
	if (str)
		return (init_line(&str, *line, &chptr, ret));
	return (0);
}

int		main(int argc, char **argv)
{
	int fd = open(argv[1], O_RDONLY);
	char *line;

	line = NULL;
	while (get_next_line(fd, &line) == 1)
	{
		ft_putstr(line);
		free(line);
		line = NULL;
	}
	return (0);
}
